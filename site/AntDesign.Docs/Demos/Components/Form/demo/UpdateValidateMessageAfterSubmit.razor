@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using System.ComponentModel

<Form Model="@_model"
      OnFinish="OnFinish"
      LabelColSpan="8"
      WrapperColSpan="16"
      OnEditContextChanged="OnEditContextChanged"
      OnValidationRequested="OnValidationRequested"
      @ref="_form">
    <FormItem Label="User Name">
        <Input @bind-Value="@context.Username" />
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
        <Button Type="@ButtonType.Primary" HtmlType="button" OnClick="() => { _validationMessageStore?.Clear();  _form?.UpdateValidateMessage();}">
            Clear
        </Button>
    </FormItem>
</Form>
@code
{
    public class Model
    {
        [Required]
        public string Username { get; set; }
    }

    private Model _model = new Model();
    Form<Model> _form;
    ValidationMessageStore _validationMessageStore;

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(_model)}");
        _validationMessageStore ??= new ValidationMessageStore(editContext);
        var filed = editContext.Field("Username");
        _validationMessageStore.Add(filed, "Username has error.");
        _form?.UpdateValidateMessage(filed);
    }

    private void OnEditContextChanged(EditContext editContext)
    {
        _validationMessageStore = new ValidationMessageStore(editContext);
    }

    void OnValidationRequested(ValidationRequestedEventArgs args)
    {
        _validationMessageStore?.Clear();
    }
}